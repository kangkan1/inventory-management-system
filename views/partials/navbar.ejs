<style>
  .search-box-wrapper{
      max-width: 600px;
      margin: 5px auto;
      box-sizing: border-box;
      z-index: 10;
      opacity: 1;

  }
  .search-box-wrapper .search-input{

      background: #fff;
      width: 100%;
      border-radius: 5px;
      position: relative;
      box-shadow: 0px 1px 5px 3px rgba(0,0,0,0.12);
      font-family: 'Poppins', sans-serif;
      box-sizing: border-box;
      overflow: visible;
  }
  .search-input input{

      height: 55px;
      width: 100%;
      outline: none;
      border: none;
      border-radius: 5px;
      padding: 0 60px 0 20px;
      font-size: 18px;
      box-shadow: 0px 1px 5px rgba(0,0,0,0.1);
      font-family: 'Poppins', sans-serif;
      box-sizing: border-box;
  }
  .search-input.active input{

      border-radius: 5px 5px 0 0;
      font-family: 'Poppins', sans-serif;
      box-sizing: border-box;
  }
  .search-input .autocom-box{
      position: absolute;
      pointer-events: none;
      max-height: 500px;
      max-width: 600px;
      overflow-y: auto;
      box-sizing: border-box;
      z-index: 10;

  }
  .search-input.active .autocom-box{

      padding: 10px 8px;
      opacity: 1;
      pointer-events: auto;
      box-sizing: border-box;
      z-index: 10;
     


  }
  .autocom-box li{
      list-style: none;
      padding: 12px 12px;
      display: none;
      width: 100%;
      cursor: default;
      border-radius: 3px;
      font-family: 'Poppins', sans-serif;
      box-sizing: border-box;
      background: #fcfbfb;
      text-overflow: ellipsis;
     
      
  }
  .search-input.active .autocom-box li{
      display: block;
      font-family: 'Poppins', sans-serif;
      box-sizing: border-box;
  }
  .autocom-box li:hover{
      background: #d7d5d5;
      box-sizing: border-box;
  }
  .autocom-box a{
      color:black;
      list-style: none;
      padding: 8px 12px;
      display: none;
      width: 100%;
      cursor: default;
      border-radius: 3px;
      font-family: 'Poppins', sans-serif;
      box-sizing: border-box;
      
  }
  .search-input.active .autocom-box a{
      display: block;
      font-family: 'Poppins', sans-serif;
      box-sizing: border-box;
      color: black;
     
  }
  .autocom-box a:hover{
      background: #efefef;
      box-sizing: border-box;
      color: black;
      
  }
  .search-input .icon-blue{
      position: absolute;
      right: 0px;
      top: 1px;
      height: 53px;
      width: 55px;
      text-align: center;
      line-height: 55px;
      font-size: 20px;
      color: #644bff;
      cursor: pointer;
      box-sizing: border-box;
  }
  .search-input .icon-blue:hover{
      background: #efefef;
      opacity:0.9;
  }
  .search-input .icon-black{
      position: absolute;
      right: 55px;
      top: 1px;
      height: 53px;
      width: 40px;
      text-align: center;
      line-height: 55px;
      font-size: 20px;
      color: #1d1b1f;
      cursor: pointer;
      box-sizing: border-box;
  }
  .search-input .icon-black:hover{
      background: #efefef;
      opacity:0.9;
  }
</style>



<nav class="navbar navbar-expand-lg bg-dark bg-gradient">
    <div class="container-fluid" style="font-size: 1.5rem;">
      <a class="navbar-brand text-white d-none" href="#">Navbar</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
        <div class="navbar-nav" style="font-size: 1.5rem;">
          <a class="nav-link text-white" aria-current="page" href="../" >Home</a>
          <a class="nav-link text-white" href="/add">Add Product</a>

        </div>
      </div>
      <div class="col-6">
        <div class="search-box-wrapper">
            <div class="search-input" id="search-input">
                <a href="" target="_blank" hidden></a>
                <input type="text" id="search-text" placeholder="Type to search..">
                <div class="autocom-box col-12" id="auto-complete-box">
                    <!-- here list are inserted from javascript -->
                </div>
                <div class="icon-black" id="cancel-click-button-icon">
                    <!--            <i class="fa fa-times fa-large"></i>-->
                    <svg xmlns="http://www.w3.org/2000/svg" width="29" height="29" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                        <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
                    </svg>
    
                </div>
                <div class="icon-blue" id="search-click-button-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="31" height="31" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                        <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/>
                    </svg>
                </div>
    
            </div>
        </div>
    </div>
    
    </div>
</nav>
<script>
  // getting all required elements
  var url = `search`
  const searchWrapper = document.querySelector("#search-input");
  const inputBox = document.querySelector("#search-text");
  const suggBox = document.querySelector("#auto-complete-box");
  const icon = document.querySelector("#search-click-button-icon");
  document.getElementById("cancel-click-button-icon").addEventListener("click", onClickCancel);
  let linkTag = searchWrapper.querySelector("a");
  let webLink;


  // if user press any key and release
  inputBox.onkeyup = (e)=>{
      let userData = e.target.value; //user enetered data
      let emptyArray = [];
      if(userData.length <2){
          emptyArray.push("<a href=\"#\">Please type at least two character</a>");
          searchWrapper.classList.add("active"); //show autocomplete box
          showSuggestions(emptyArray);
          return
      }else {
          emptyArray.push("<li><a href=\"#\">Searching.....</a></li>");
          searchWrapper.classList.add("active"); //show autocomplete box
          showSuggestions(emptyArray);
      }
      let csrf_name = '_csrf';
      let csrf_value = ``;
      var xhttp = new XMLHttpRequest();
      xhttp.open("POST", url+"?val="+userData, true);
      xhttp.setRequestHeader(csrf_name, csrf_value);
      xhttp.setRequestHeader('x-csrf-token', csrf_value);
      xhttp.setRequestHeader("Content-Type", "application/json; charset=utf-8");
      xhttp.setRequestHeader("Accept", "application/json");
      xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {
              let res = JSON.parse(this.responseText)
            //   console.log(res);
              // if(res.status === 'success')
              //     console.log(res)
              let result = res.results
              let link = ""
              let emptyArray = [];
              if(result.length==0){
                //   console.log("no result found");
                  emptyArray.push('<li><a href=\"#\">No result found</a></li>')
                  showSuggestions(emptyArray);
              }else {
                  for(let i=0;i<result.length;i++){

                      result[i]['text'] = result[i]['text'].replaceAll("'", "");
                      emptyArray.push('<li onclick="select(\''+result[i]['url']+'\', \''+result[i]['text']+'\')">'+result[i]['text']+'</li>')
                      // link += '<li onclick="select(\"'+result[i]['url']+'\")">'+result[i]['text']+'</li>'
                  }

                //   console.log("some result found");
                //   console.log("empty array:");
                //   console.log(emptyArray)
                  showSuggestions(emptyArray);
              }


          }else {
              console.log('some error occurred')
          }
      };
      xhttp.send();
      return;
      // if(userData){
      //     icon.onclick = ()=>{
      //         webLink = `https://www.google.com/search?q=${userData}`;
      //         linkTag.setAttribute("href", webLink);
      //         linkTag.click();
      //     }
      //     emptyArray = suggestions.filter((data)=>{
      //         //filtering array value and user characters to lowercase and return only those words which are start with user enetered chars
      //         return data.toLocaleLowerCase().startsWith(userData.toLocaleLowerCase());
      //     });
      //     emptyArray = emptyArray.map((data)=>{
      //         // passing return data inside li tag
      //         return data = `<li>${data}</li>`;
      //     });
      //     searchWrapper.classList.add("active"); //show autocomplete box
      //     console.log("empty array:")
      //     console.log(emptyArray)
      //     showSuggestions(emptyArray);
      //     let allList = suggBox.querySelectorAll("li");
      //     for (let i = 0; i < allList.length; i++) {
      //         //adding onclick attribute in all li tag
      //         allList[i].setAttribute("onclick", "select(this)");
      //     }
      // }else{
      //     searchWrapper.classList.remove("active"); //hide autocomplete box
      // }
  }


  function select(element, text){
      // let selectData = element.textContent;
      // inputBox.value = selectData;
      // console.log("text:")
      // console.log(text)
      text = text.trim();
      inputBox.value = text
    //   console.log(element)
      window.open(element, "_blank");
      icon.onclick = ()=>{
          // webLink = `https://www.google.com/search?q=${selectData}`;
        //   window.location.href = webLink;
          
          webLink = element;
          
        //   window.open(webLink, "_blank");
          linkTag.setAttribute("href", webLink);
          linkTag.click();
      }
      searchWrapper.classList.remove("active");
  }

  function onClickCancel(){
    //   console.log("Cancel clicked")
      inputBox.value=""
      let emptyArray = [];
      showSuggestions(emptyArray)
      icon.onclick = ()=>{
          webLink = "#";
          linkTag.setAttribute("href", webLink);
          // linkTag.click();
      }
      searchWrapper.classList.remove("active");

  }

  function showSuggestions(list){
      let listData;
      if(!list.length){
          userValue = inputBox.value;
          listData = `<li>${userValue}</li>`;
      }else{
          listData = list.join('');
      }
      suggBox.innerHTML = listData;
  }


</script>
